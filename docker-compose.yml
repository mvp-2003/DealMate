version: '3.8'
services:
  backend:
    build: ./backend
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=${DATABASE_URL}
    env_file:
      - ./backend/.env
    depends_on:
      - db
  
  # Python AI Service
  ai-service:
    build: ./backend/ai-service
    ports:
      - "8001:8001"
    environment:
      - GOOGLE_API_KEY=${GOOGLE_API_KEY}
      - DATABASE_URL=${DATABASE_URL}
      - REDIS_URL=redis://redis:6379
      - LOG_LEVEL=INFO
      - GEMINI_MODEL=gemini-1.5-flash
    env_file:
      - ./backend/ai-service/.env
    depends_on:
      - redis
  
  frontend:
    build: ./frontend
    ports:
      - "3000:3000"
    depends_on:
      - backend
      - ai-service
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:8000
      - NEXT_PUBLIC_AI_API_URL=http://localhost:8001
  
  # Database
  db:
    image: postgres:15
    environment:
      - POSTGRES_DB=dealpal
      - POSTGRES_USER=dealpal
      - POSTGRES_PASSWORD=password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
  
  # Redis for caching
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes

volumes:
  postgres_data:
  redis_data:
  ai-models-cache:
  torch-cache: